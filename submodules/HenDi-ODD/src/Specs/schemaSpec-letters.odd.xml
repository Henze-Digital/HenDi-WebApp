<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://jenkins.tei-c.org/job/TEIP5-dev/lastStableBuild/artifact/P5/release/xml/tei/odd/p5.nvdl" type="application/xml" schematypens="http://purl.oclc.org/dsdl/nvdl/ns/structure/1.0"?>
<schemaSpec ident="hwhLetters" xml:lang="en" start="TEI" source="../../../WeGA-ODD/compiled-ODD/guidelines-de-wegaLetters.compiled.xml" xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron">

    <desc>This is the customization for encoding letters at Henze-Digital</desc>

    <moduleRef key="core"/>
    <elementRef key="foreign" source="tei:4.3.0"/>
    <elementRef key="measure" source="tei:4.3.0"/>
    <elementRef key="term" source="tei:4.3.0"/>

    <moduleRef key="tei"/>
    <moduleRef key="header"/>
    <elementRef key="extent" source="tei:4.3.0"/>
    <elementRef key="textClass" source="tei:4.3.0"/>
    <elementRef key="keywords" source="tei:4.3.0"/>

    <moduleRef key="textstructure"/>

    <moduleRef key="namesdates"/>
    <elementRef key="bloc" source="tei:4.3.0"/>
    <elementRef key="district" source="tei:4.3.0"/>
    <!-- location, residence, offset -->

    <moduleRef key="figures"/>
    <moduleRef key="transcr"/>
    <elementRef key="fw" source="tei:4.3.0"/>

    <moduleRef key="msdescription" source="tei:4.3.0" except="additions bindingDesc decoDesc sealDesc"/>

    <moduleRef key="linking"/>
    <moduleRef key="textcrit"/>
    <moduleRef key="gaiji"/>



    <!-- ODD-specific elements like <elementSpec> and <classSpec>;
             or references to <specGrp>s defined above using <specGrpRef>. -->

    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-patterns"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-styleguides"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-lists"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-classes"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-element-additions"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-common-constraints"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-common-atts"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-tei-atts"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-core"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-header"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-textstructure"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-namesdates"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-figures"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-transcr"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-msdescription"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-linking"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-textcrit"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-gaiji"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-tei-macros"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-datatypes"/>
    <specGrpRef target="../Specs/common-specs.odd.xml#hwh-biblStruct"/>
    
    <constraintSpec scheme="schematron" ident="rendIfBreakNo" mode="add">
        <desc versionDate="2014-07-09" xml:lang="en">If a line break (line beginning) is inside a word then <att>rend</att> can be used to encode the hyphen is orthographiclally not realzied.</desc>
        <desc versionDate="2014-07-09" xml:lang="de">Wenn ein Umbruch im wort erfolgt, so kann mit <att>rend</att> dargestellt werden, dass ein Trennstrich orthographisch nciht realisiert ist.</desc>
        <constraint>
            <sch:rule context="tei:lb | tei:pb">
                <sch:assert test="not(@*) or @n or @break or (@break and @rend)">@rend is only allowed if @break is used.</sch:assert>
            </sch:rule>
        </constraint>
    </constraintSpec>
    <constraintSpec scheme="schematron" ident="reportLBfollowsPB" mode="add">
        <desc versionDate="2022-04-25" xml:lang="en">If a line break (line beginning) follows a page break (page beginning), this will be reported.</desc>
        <desc versionDate="2014-07-09" xml:lang="de">Wenn ein Umbruch im wort erfolgt, so kann mit <att>rend</att> dargestellt werden, dass ein Trennstrich orthographisch nciht realisiert ist.</desc>
        <constraint>
            <sch:rule context="tei:pb">
                <sch:report test=".[following::lb]">A lb-element right after a pb-element is senseless.</sch:report>
            </sch:rule>
        </constraint>
    </constraintSpec>
    
    <elementSpec ident="TEI" mode="change" module="core">
        <attList>
            <attDef ident="status" usage="req" mode="add">
                <datatype>
                    <dataRef key="hwh_docStatus.list"/>
                </datatype>
            </attDef>
            <attDef ident="source" mode="add" usage="req">
                <valList type="closed" mode="change">
                    <valItem ident="HWH" mode="add">
                        <desc versionDate="2021-10-20" xml:lang="en">persons from the database of the Henze-Digital project (HWH).</desc>
                        <desc versionDate="2021-10-20" xml:lang="de">Personen aus dem Datenbestand des Projektes Henze-Digital (HWH).</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>

    <elementSpec ident="teiHeader" module="header" mode="change">
        <constraintSpec scheme="schematron" ident="seriesTitle" mode="change">
            <constraint>
                <sch:rule context="tei:fileDesc/tei:titleStmt/tei:title[@level='s']">
                    <sch:assert test=".=('Henze-Digital, Briefedition')">The series title must be "Henze-Digital, Briefedition".</sch:assert>
                </sch:rule>
            </constraint>
        </constraintSpec>
    </elementSpec>

    <elementSpec ident="div" mode="change" module="textstructure">
        <content>
            <sequence>
                    <!--                    <elementRef key="p"/>-->
                <classRef key="model.pLike" minOccurs="0" maxOccurs="unbounded"/>
                <alternate minOccurs="0" maxOccurs="unbounded">
                    <classRef key="model.divTop"/>
                    <classRef key="model.divBottom"/>
                    <classRef key="model.global"/>
                </alternate>
                <sequence minOccurs="0">
                    <alternate>
                        <sequence minOccurs="1" maxOccurs="unbounded">
                            <alternate>
                                <classRef key="model.divLike"/>
                                <classRef key="model.divGenLike"/>
                            </alternate>
                            <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
                        </sequence>
                        <sequence>
                            <sequence minOccurs="1" maxOccurs="unbounded">
                                <classRef key="model.common"/>
                                <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
                            </sequence>
                            <sequence minOccurs="0" maxOccurs="unbounded">
                                <alternate>
                                    <classRef key="model.divLike"/>
                                    <classRef key="model.divGenLike"/>
                                </alternate>
                                <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
                            </sequence>
                        </sequence>
                    </alternate>
                    <sequence minOccurs="0" maxOccurs="unbounded">
                        <classRef key="model.divBottom"/>
                        <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                        <elementRef key="p" minOccurs="0" maxOccurs="unbounded"/>
                        <!--                        <classRef key="model.pLike"/>-->
                </sequence>
            </sequence>
        </content>
        <attList>
            <attDef ident="type" mode="change" usage="opt">
                <desc versionDate="2021-10-19" xml:lang="en">characterizes the element in some sense, using any convenient classification scheme or typology.</desc>
                <desc versionDate="2021-10-19" xml:lang="de">charakterisiert das Element in einem gewissen Sinne, wobei irgendeine zweckmäßige Systematik oder Typologie angwendet wird.</desc>
                <datatype>
                    <rng:choice>
                        <rng:value>writingSession</rng:value>
                        <rng:value>poem</rng:value>
                    </rng:choice>
                </datatype>
            </attDef>
            <attDef ident="n" mode="change" usage="opt">
                <gloss versionDate="2021-10-19" xml:lang="en">number</gloss>
                <desc versionDate="2021-10-19" xml:lang="en">gives a number (or other label) for an element, which is not necessarily unique within the document.</desc>
                <gloss versionDate="2021-10-19" xml:lang="de">Nummer</gloss>
                <desc versionDate="2021-10-19" xml:lang="de">gibt dem Element eine Nummer (oder eine andere Bezeichnung), die nicht unbedingt eindeutig im Dokument ist.</desc>
                <datatype>
                    <dataRef key="teidata.count"/>
                </datatype>
            </attDef>
        </attList>
        <remarks xml:lang="en" versionDate="2021-10-19">
            <p>For Henze-Digital the content model was changed. It was necessary to allow text blocs after the closer.</p>
        </remarks>
    </elementSpec>

    <elementSpec ident="text" mode="change" module="textstructure">
        <!-- <desc versionDate="2013-11-11" xml:lang="en">contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample.</desc>
        <desc versionDate="2013-11-11" xml:lang="de">enthält einen einzelnen Text jeglicher Art, ob einheitlich oder zusammengesetzt, beispielsweise ein Gedicht, ein Drama, eine Sammlung von Aufätzen, ein Roman, ein Wörterbuch, oder eine Sammlung.</desc> -->
        <attList>
            <attDef ident="type" mode="replace" usage="req">
                <desc versionDate="2013-11-11" xml:lang="en">characterizes the element in some sense, using any convenient classification scheme or typology.</desc>
                <desc versionDate="2013-11-11" xml:lang="de">charakterisiert das Element in einem gewissen Sinne, wobei irgendeine zweckmäßige Systematik oder Typologie angwendet wird.</desc>
                <valList type="closed">
                    <valItem ident="card.business">
                        <desc versionDate="2021-10-13" xml:lang="en">Business card</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Visitenkarte</desc>
                    </valItem>
                    <valItem ident="card.letter">
                        <desc versionDate="2021-10-13" xml:lang="en">Letter card, christmas card, congratulations card, greeting card</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Briefkarte, Weihnachtskarte, Glückwunschkarte, Grußkarte</desc>
                    </valItem>
                    <valItem ident="card.postal">
                        <desc versionDate="2021-10-13" xml:lang="en">Postal card, art card, view card, picture postcard</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Postkarte, Kunstkarte, Ansichtskarte, Bildkarte</desc>
                    </valItem>
                    <valItem ident="contract">
                        <desc versionDate="2021-10-13" xml:lang="en">Contract</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Vertrag</desc>
                    </valItem>
                    <valItem ident="document">
                        <desc versionDate="2021-10-13" xml:lang="en">Document</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Dokument</desc>
                    </valItem>
                    <valItem ident="envelope">
                        <desc versionDate="2021-10-13" xml:lang="en">Envelope</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Umschlag</desc>
                    </valItem>
                    <valItem ident="formCommitment">
                        <desc versionDate="2021-10-13" xml:lang="en">Commitment form</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Verpflichtungsschein</desc>
                    </valItem>
                    <valItem ident="letter">
                        <desc versionDate="2021-10-13" xml:lang="en">Letter</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Brief</desc>
                    </valItem>
                    <valItem ident="statement">
                        <desc versionDate="2021-10-13" xml:lang="en">Statement</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Abrechnung</desc>
                    </valItem>
                    <valItem ident="statement.fee">
                        <desc versionDate="2021-10-13" xml:lang="en">Fee statement</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Honorar-Abrechnung/-Berechnung</desc>
                    </valItem>
                    <valItem ident="telegram">
                        <desc versionDate="2021-10-13" xml:lang="en">Telegram</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Telegramm</desc>
                    </valItem>
                    <valItem ident="unknown">
                        <desc versionDate="2021-10-13" xml:lang="en">Unknown type</desc>
                        <desc versionDate="2021-10-13" xml:lang="de">Unbekannt</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
        <remarks versionDate="2022-04-08" xml:lang="de">
            <p>Diese Klassifizierung entstand aus den Registern, die als Datenbasis für das Projekt Henze-Digital bereits vorlagen.</p>
        </remarks>
    </elementSpec>

    <elementSpec ident="lb" module="core" mode="change">
        <desc versionDate="2021-10-18" xml:lang="en">This element indicates a linebeginning.</desc>
        <desc versionDate="2021-10-18" xml:lang="de">dieses Element zeigt den Beginn einer (neuen) Zeile an.</desc>
        <attList>
            <attDef ident="rend" usage="opt">
                <desc versionDate="2021-10-18" xml:lang="en"><att>rend</att> is intended as an extension to <att>break</att> and is to be used when, for example, a hyphen is missing at the line break.</desc>
                <desc versionDate="2021-10-18" xml:lang="de"><att>rend</att> ist als Erweiterung zu <att>break</att> gedacht und soll verwendet werden, wenn z.B. ein Trennstrich am Zeilenumbruch fehlt.</desc>
                <valList type="closed">
                    <valItem ident="noHyphen"/>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="pb" module="core" mode="change">
        <desc versionDate="2021-10-18" xml:lang="en">This element indicates a linebeginning.</desc>
        <desc versionDate="2021-10-18" xml:lang="de">dieses Element zeigt den Beginn einer (neuen) Zeile an.</desc>
        <attList>
            <attDef ident="rend" usage="opt">
                <desc versionDate="2021-10-18" xml:lang="en"><att>rend</att> is intended as an extension to <att>break</att> and is to be used when, for example, a hyphen is missing at the line break.</desc>
                <desc versionDate="2021-10-18" xml:lang="de"><att>rend</att> ist als Erweiterung zu <att>break</att> gedacht und soll verwendet werden, wenn z.B. ein Trennstrich am Zeilenumbruch fehlt.</desc>
                <valList type="closed">
                    <valItem ident="noHyphen"/>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="foreign" module="core" mode="change">
        <desc versionDate="2021-10-18" xml:lang="en">This element indicates a linebeginning.</desc>
        <desc versionDate="2021-10-18" xml:lang="de">dieses Element zeigt den Beginn einer (neuen) Zeile an.</desc>
        <classes>
            <memberOf key="model.emphLike"/>
            <memberOf key="att.global"/>
            <memberOf key="att.global.rendition" mode="delete"/>
            <memberOf key="att.global.linking" mode="delete"/>
            <memberOf key="att.global.analytic" mode="delete"/>
            <memberOf key="att.global.facs" mode="delete"/>
            <memberOf key="att.global.change" mode="delete"/>
            <memberOf key="att.global.responsibility" mode="delete"/>
            <memberOf key="att.global.source" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="n" mode="delete"/>
            <attDef ident="xml:base" mode="delete"/>
            <attDef ident="xml:space" mode="delete"/>
            <attDef ident="xml:lang" usage="req" mode="change">
                <desc versionDate="2021-10-18" xml:lang="en">The language used in the following sibling.</desc>
                <desc versionDate="2021-10-18" xml:lang="de">Die im Foglenden genutzte Sprache.</desc>
                <datatype>
                    <dataRef key="teidata.language"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>

    <elementSpec ident="postscript" mode="change" module="textstructure">
        <desc versionDate="2013-11-11" xml:lang="en">contains a postscript, e.g. to a letter.</desc>
        <desc versionDate="2013-11-11" xml:lang="de"/>
        <classes mode="change">
            <memberOf key="att.written" mode="delete"/>
            <memberOf key="att.global.rendition" mode="add"/>
        </classes>
        <!-- Beispiel von Frau Bartlitz (Email vom 24. August 2012) [PS] -->
        <!--<exemplum versionDate="2013-11-11" xml:lang="de">
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
                <postscript><p>ich schikke der Sicherheit halber alles über Prag, durch Liebig</p></postscript>
            </egXML>
        </exemplum>-->
    </elementSpec>

    <elementSpec ident="dimensions" module="msdescription" mode="change">
        <desc versionDate="2022-01-11" xml:lang="en">Indicates the (physical) dimensions of an object.</desc>
        <desc versionDate="2022-01-11" xml:lang="de">Gibt die (physicalischen) Abmessungen eines Objektes an.</desc>
        <content>
            <alternate minOccurs="0"
                maxOccurs="unbounded">
                <elementRef key="height"/>
                <elementRef key="width"/>
            </alternate>
        </content>
    </elementSpec>
    
    <elementSpec ident="objectDesc" module="msdescription" mode="change">
        <attList>
            <attDef ident="form" mode="change" usage="req">
                <valList mode="add" type="semi">
                    <valItem ident="document">
                        <gloss versionDate="2022-01-14" xml:lang="de">Dokument</gloss>
                        <gloss versionDate="2022-01-14" xml:lang="en">document</gloss>
                    </valItem>
                    <valItem ident="envelope">
                        <gloss versionDate="2022-01-31" xml:lang="de">Briefumschlag</gloss>
                        <gloss versionDate="2022-01-31" xml:lang="en">envelope</gloss>
                    </valItem>
                    <valItem ident="letter">
                        <gloss versionDate="2022-01-12" xml:lang="de">Brief</gloss>
                        <gloss versionDate="2022-01-12" xml:lang="en">Letter</gloss>
                    </valItem>
                    <valItem ident="telegram">
                        <gloss versionDate="2022-01-12" xml:lang="de">Telegramm</gloss>
                        <gloss versionDate="2022-01-12" xml:lang="en">telegram</gloss>
                    </valItem>
                    <valItem ident="postcard">
                        <gloss versionDate="2022-01-12" xml:lang="de">Postkarte</gloss>
                        <gloss versionDate="2022-01-12" xml:lang="en">postcard</gloss>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="term" module="core" mode="change">
        <constraintSpec scheme="schematron" ident="controleContentOfTermElements">
            <desc xml:lang="de">Kontrolliert das Vokabular, welches als Inhalte für term Elemente in textClass verwendet wird.</desc>
            <desc xml:lang="en">Controls the vocabulary used as content for term elements in textClass.</desc>
            <constraint>
                <sch:rule context="tei:textClass/tei:keywords/tei:term">
                    <sch:assert test="parent::node()/tei:term[position() = 1] = ('manuscript','typoscript')" role="warn">The value of the first term should be 'manuscript' or 'typoscript'</sch:assert>
                    <sch:report test="parent::node()/tei:term[position() != 1] = ('manuscript','Manuskript','typoscript','Typoskript')"
                        role="warn">The values 'manuscript' and 'typoscript' should only occur in the first term.</sch:report>
                </sch:rule>
            </constraint>
        </constraintSpec>
    </elementSpec>
    
    <elementSpec ident="address" module="core" mode="change">
       <attList>
           <attDef ident="type" mode="add" usage="opt">
               <valList mode="add" type="closed">
                   <valItem ident="sender">
                       <gloss versionDate="2022-01-14" xml:lang="de">Absender</gloss>
                       <gloss versionDate="2022-01-14" xml:lang="en">sender</gloss>
                   </valItem>
                   <valItem ident="receiver">
                       <gloss versionDate="2022-01-31" xml:lang="de">Empfänger</gloss>
                       <gloss versionDate="2022-01-31" xml:lang="en">receiver</gloss>
                   </valItem>
               </valList>
           </attDef>
       </attList>
    </elementSpec>
    
</schemaSpec>
