<?xml version="1.0" encoding="utf-8"?>
<grammar xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:tei="http://www.tei-c.org/ns/1.0"
         xmlns:teix="http://www.tei-c.org/ns/Examples"
         xmlns="http://relaxng.org/ns/structure/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         ns="http://www.tei-c.org/ns/1.0"><!--
Schema generated from ODD source 2022-04-29T08:47:20Z. .
TEI Edition: 
TEI Edition Location: https://www.tei-c.org/Vault/P5//
 This is the customization for encoding places at Henze-Digital 
--><!--This work is licensed under a  Creative Commons Attribution 4.0 International License (CC BY 4.0) .-->
   <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron"
           prefix="tei"
           uri="http://www.tei-c.org/ns/1.0"/>
   <define name="macro.phraseSeq">
      <zeroOrMore>
         <choice>
            <text/>
            <ref name="model.gLike"/>
            <ref name="model.attributable"/>
            <ref name="model.phrase"/>
            <ref name="model.global"/>
         </choice>
      </zeroOrMore>
   </define>
   <define name="pnd.pattern">
      <data type="string">
         <param name="pattern">1[012]?\d{7}[0-9X]|[47]\d{6}-\d|[1-9]\d{0,7}-[0-9X]|3\d{7}[0-9X]</param>
      </data>
   </define>
   <define name="viaf.pattern">
      <data type="string">
         <param name="pattern">[1-9]\d(\d{0,7}|\d{17,20})</param>
      </data>
   </define>
   <define name="geonames.pattern">
      <data type="string">
         <param name="pattern">[1-9][0-9]{0,8}</param>
      </data>
   </define>
   <define name="bd.pattern">
      <data type="string">
         <param name="pattern">BachDigitalPerson_agent_[0-9]{8}</param>
      </data>
   </define>
   <define name="att.canonical.attribute.key">
      <optional>
         <attribute name="key">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.</a:documentation>
            <data type="string"/>
         </attribute>
      </optional>
   </define>
   <define name="att.canonical.attribute.ref">
      <optional>
         <attribute name="ref">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="anyURI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="att.datable.w3c.attributes">
      <ref name="att.datable.w3c.attribute.when"/>
      <ref name="att.datable.w3c.attribute.notBefore"/>
      <ref name="att.datable.w3c.attribute.notAfter"/>
      <ref name="att.datable.w3c.attribute.from"/>
      <ref name="att.datable.w3c.attribute.to"/>
   </define>
   <define name="att.datable.w3c.attribute.when">
      <optional>
         <attribute name="when">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.</a:documentation>
            <choice>
               <data type="date"/>
               <data type="gYear"/>
               <data type="gYearMonth"/>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="att.datable.w3c.attribute.notBefore">
      <optional>
         <attribute name="notBefore">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.</a:documentation>
            <choice>
               <data type="date"/>
               <data type="gYear"/>
               <data type="gYearMonth"/>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="att.datable.w3c.attribute.notAfter">
      <optional>
         <attribute name="notAfter">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.</a:documentation>
            <choice>
               <data type="date"/>
               <data type="gYear"/>
               <data type="gYearMonth"/>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="att.datable.w3c.attribute.from">
      <optional>
         <attribute name="from">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.</a:documentation>
            <choice>
               <data type="date"/>
               <data type="gYear"/>
               <data type="gYearMonth"/>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="att.datable.w3c.attribute.to">
      <optional>
         <attribute name="to">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.</a:documentation>
            <choice>
               <data type="date"/>
               <data type="gYear"/>
               <data type="gYearMonth"/>
            </choice>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-att.datable.w3c-att-datable-w3c-when-constraint-rule-1">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:*[@when]">
         <sch:report test="@notBefore|@notAfter|@from|@to" role="nonfatal">The @when attribute cannot be used with any other att.datable.w3c attributes.</sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-att.datable.w3c-att-datable-w3c-from-constraint-rule-2">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:*[@from]">
         <sch:report test="@notBefore" role="nonfatal">The @from and @notBefore attributes cannot be used together.</sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-att.datable.w3c-att-datable-w3c-to-constraint-rule-3">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:*[@to]">
         <sch:report test="@notAfter" role="nonfatal">The @to and @notAfter attributes cannot be used together.</sch:report>
      </sch:rule>
   </pattern>
   <define name="att.datable.attributes">
      <ref name="att.datable.w3c.attributes"/>
      <ref name="att.datable.attribute.calendar"/>
   </define>
   <define name="att.datable.attribute.calendar">
      <optional>
         <attribute name="calendar">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">indicates one or more systems or calendars to which the date represented by the content of this element belongs.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="anyURI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-att.datable-calendar-calendar-constraint-rule-4">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:*[@calendar]">
         <sch:assert test="string-length(.) gt 0"> @calendar indicates one or more systems or calendars to
              which the date represented by the content of this element belongs, but this
              <sch:name/> element has no textual content.</sch:assert>
      </sch:rule>
   </pattern>
   <define name="att.global.responsibility.attributes">
      <ref name="att.global.responsibility.attribute.cert"/>
      <ref name="att.global.responsibility.attribute.resp"/>
   </define>
   <define name="att.global.responsibility.attribute.cert">
      <optional>
         <attribute name="cert">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(certainty) signifies the degree of certainty associated with the intervention or interpretation.</a:documentation>
            <choice>
               <data type="double"/>
               <choice>
                  <value>high</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
                  <value>medium</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
                  <value>low</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
                  <value>unknown</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
               </choice>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="att.global.responsibility.attribute.resp">
      <optional>
         <attribute name="resp">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="anyURI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="att.global.rendition.attributes">
      <ref name="att.global.rendition.attribute.rend"/>
   </define>
   <define name="att.global.rendition.attribute.rend">
      <optional>
         <attribute name="rend">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(rendition) indicates how the element in question was rendered or presented in the source text.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="token">
                     <param name="pattern">[^\p{C}\p{Z}]+</param>
                  </data>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="att.global.source.attributes">
      <ref name="att.global.source.attribute.source"/>
   </define>
   <define name="att.global.source.attribute.source">
      <optional>
         <attribute name="source">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">specifies the source from which some aspect of this element is drawn.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="anyURI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="att.global.attributes">
      <ref name="att.global.rendition.attributes"/>
      <ref name="att.global.responsibility.attributes"/>
      <ref name="att.global.source.attributes"/>
      <ref name="att.global.attribute.xmlid"/>
      <ref name="att.global.attribute.n"/>
      <ref name="att.global.attribute.xmllang"/>
   </define>
   <define name="att.global.attribute.xmlid">
      <optional>
         <attribute name="xml:id">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(identifier) provides a unique identifier for the element bearing the attribute.</a:documentation>
            <data type="ID"/>
         </attribute>
      </optional>
   </define>
   <define name="att.global.attribute.n">
      <optional>
         <attribute name="n">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(number) gives a number (or other label) for an element, which is not necessarily unique within the document.</a:documentation>
            <data type="string"/>
         </attribute>
      </optional>
   </define>
   <define name="att.global.attribute.xmllang">
      <optional>
         <attribute name="xml:lang">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(language) indicates the language of the element content using a tag generated according to <a xmlns="http://www.w3.org/1999/xhtml"
                  href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">BCP 47</a>.</a:documentation>
            <choice>
               <value>en</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Englisch</a:documentation>
               <value>de</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Deutsch</a:documentation>
               <value>fr</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Französisch</a:documentation>
               <value>es</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Spanisch</a:documentation>
               <value>it</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Italienisch</a:documentation>
               <value>la</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Latein</a:documentation>
               <value>el</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Griechisch (modern)</a:documentation>
               <value>no</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Norwegisch</a:documentation>
               <value>noRecord</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Nicht erfasst</a:documentation>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="att.naming.attribute.nymRef">
      <optional>
         <attribute name="nymRef">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
            <text/>
         </attribute>
      </optional>
   </define>
   <define name="att.naming.attribute.role">
      <optional>
         <attribute name="role">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="token">
                     <param name="pattern">[^\p{C}\p{Z}]+</param>
                  </data>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="att.typed.attributes">
      <ref name="att.typed.attribute.type"/>
      <ref name="att.typed.attribute.subtype"/>
   </define>
   <define name="att.typed.attribute.type">
      <optional>
         <attribute name="type">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">characterizes the element in some sense, using any convenient classification scheme or typology.</a:documentation>
            <data type="token">
               <param name="pattern">[^\p{C}\p{Z}]+</param>
            </data>
         </attribute>
      </optional>
   </define>
   <define name="att.typed.attribute.subtype">
      <optional>
         <attribute name="subtype">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(subtype) provides a sub-categorization of the element, if needed</a:documentation>
            <data type="token">
               <param name="pattern">[^\p{C}\p{Z}]+</param>
            </data>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-att.typed-subtypeTyped-constraint-rule-5">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:*[@subtype]">
         <sch:assert test="@type">The <sch:name/> element should not be categorized in detail with @subtype unless also categorized in general with @type</sch:assert>
      </sch:rule>
   </pattern>
   <define name="model.nameLike.agent">
      <notAllowed/>
   </define>
   <define name="model.nameLike.agent_alternation">
      <notAllowed/>
   </define>
   <define name="model.nameLike.agent_sequence">
      <empty/>
   </define>
   <define name="model.nameLike.agent_sequenceOptional">
      <empty/>
   </define>
   <define name="model.nameLike.agent_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.nameLike.agent_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.segLike">
      <notAllowed/>
   </define>
   <define name="model.hiLike">
      <notAllowed/>
   </define>
   <define name="model.hiLike_alternation">
      <notAllowed/>
   </define>
   <define name="model.hiLike_sequence">
      <empty/>
   </define>
   <define name="model.hiLike_sequenceOptional">
      <empty/>
   </define>
   <define name="model.hiLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.hiLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.emphLike">
      <notAllowed/>
   </define>
   <define name="model.emphLike_alternation">
      <notAllowed/>
   </define>
   <define name="model.emphLike_sequence">
      <empty/>
   </define>
   <define name="model.emphLike_sequenceOptional">
      <empty/>
   </define>
   <define name="model.emphLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.emphLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.highlighted">
      <choice>
         <ref name="model.hiLike"/>
         <ref name="model.emphLike"/>
      </choice>
   </define>
   <define name="model.dateLike">
      <notAllowed/>
   </define>
   <define name="model.dateLike_alternation">
      <notAllowed/>
   </define>
   <define name="model.dateLike_sequence">
      <empty/>
   </define>
   <define name="model.dateLike_sequenceOptional">
      <empty/>
   </define>
   <define name="model.dateLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.dateLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.measureLike">
      <choice>
         <ref name="geo"/>
      </choice>
   </define>
   <define name="model.measureLike_alternation">
      <choice>
         <ref name="geo"/>
      </choice>
   </define>
   <define name="model.measureLike_sequence">
      <ref name="geo"/>
   </define>
   <define name="model.measureLike_sequenceOptional">
      <optional>
         <ref name="geo"/>
      </optional>
   </define>
   <define name="model.measureLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="geo"/>
      </zeroOrMore>
   </define>
   <define name="model.measureLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="geo"/>
      </oneOrMore>
   </define>
   <define name="model.graphicLike">
      <notAllowed/>
   </define>
   <define name="model.offsetLike">
      <notAllowed/>
   </define>
   <define name="model.offsetLike_alternation">
      <notAllowed/>
   </define>
   <define name="model.offsetLike_sequence">
      <empty/>
   </define>
   <define name="model.offsetLike_sequenceOptional">
      <empty/>
   </define>
   <define name="model.offsetLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.offsetLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.pPart.msdesc">
      <notAllowed/>
   </define>
   <define name="model.pPart.editorial">
      <notAllowed/>
   </define>
   <define name="model.pPart.editorial_alternation">
      <notAllowed/>
   </define>
   <define name="model.pPart.editorial_sequence">
      <empty/>
   </define>
   <define name="model.pPart.editorial_sequenceOptional">
      <empty/>
   </define>
   <define name="model.pPart.editorial_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.pPart.editorial_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.pPart.transcriptional">
      <notAllowed/>
   </define>
   <define name="model.pPart.transcriptional_alternation">
      <notAllowed/>
   </define>
   <define name="model.pPart.transcriptional_sequence">
      <empty/>
   </define>
   <define name="model.pPart.transcriptional_sequenceOptional">
      <empty/>
   </define>
   <define name="model.pPart.transcriptional_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.pPart.transcriptional_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.pPart.edit">
      <choice>
         <ref name="model.pPart.editorial"/>
         <ref name="model.pPart.transcriptional"/>
      </choice>
   </define>
   <define name="model.ptrLike">
      <notAllowed/>
   </define>
   <define name="model.lPart">
      <notAllowed/>
   </define>
   <define name="model.global.meta">
      <notAllowed/>
   </define>
   <define name="model.milestoneLike">
      <notAllowed/>
   </define>
   <define name="model.gLike">
      <notAllowed/>
   </define>
   <define name="model.phrase.xml">
      <notAllowed/>
   </define>
   <define name="model.specDescLike">
      <notAllowed/>
   </define>
   <define name="model.noteLike">
      <notAllowed/>
   </define>
   <define name="model.global.edit">
      <notAllowed/>
   </define>
   <define name="model.placeNamePart">
      <choice>
         <ref name="placeName"/>
         <ref name="country"/>
      </choice>
   </define>
   <define name="model.placeNamePart_alternation">
      <choice>
         <ref name="placeName"/>
         <ref name="country"/>
      </choice>
   </define>
   <define name="model.placeNamePart_sequence">
      <ref name="placeName"/>
      <ref name="country"/>
   </define>
   <define name="model.placeNamePart_sequenceOptional">
      <optional>
         <ref name="placeName"/>
      </optional>
      <optional>
         <ref name="country"/>
      </optional>
   </define>
   <define name="model.placeNamePart_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="placeName"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="country"/>
      </zeroOrMore>
   </define>
   <define name="model.placeNamePart_sequenceRepeatable">
      <oneOrMore>
         <ref name="placeName"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="country"/>
      </oneOrMore>
   </define>
   <define name="model.placeStateLike">
      <choice>
         <ref name="model.placeNamePart"/>
         <ref name="location"/>
      </choice>
   </define>
   <define name="model.placeStateLike_alternation">
      <choice>
         <ref name="model.placeNamePart_alternation"/>
         <ref name="location"/>
      </choice>
   </define>
   <define name="model.placeStateLike_sequence">
      <ref name="model.placeNamePart_sequence"/>
      <ref name="location"/>
   </define>
   <define name="model.placeStateLike_sequenceOptional">
      <optional>
         <ref name="model.placeNamePart_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="location"/>
      </optional>
   </define>
   <define name="model.placeStateLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="model.placeNamePart_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="location"/>
      </zeroOrMore>
   </define>
   <define name="model.placeStateLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="model.placeNamePart_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="location"/>
      </oneOrMore>
   </define>
   <define name="model.quoteLike">
      <notAllowed/>
   </define>
   <define name="model.attributable">
      <choice>
         <ref name="model.quoteLike"/>
      </choice>
   </define>
   <define name="model.addressLike">
      <notAllowed/>
   </define>
   <define name="model.addressLike_alternation">
      <notAllowed/>
   </define>
   <define name="model.addressLike_sequence">
      <empty/>
   </define>
   <define name="model.addressLike_sequenceOptional">
      <empty/>
   </define>
   <define name="model.addressLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.addressLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="model.nameLike">
      <choice>
         <ref name="model.nameLike.agent"/>
         <ref name="model.offsetLike"/>
         <ref name="model.placeStateLike"/>
         <ref name="idno"/>
         <ref name="model.persNamePart"/>
      </choice>
   </define>
   <define name="model.nameLike_alternation">
      <choice>
         <ref name="model.nameLike.agent_alternation"/>
         <ref name="model.offsetLike_alternation"/>
         <ref name="model.placeStateLike_alternation"/>
         <ref name="idno"/>
         <ref name="model.persNamePart_alternation"/>
      </choice>
   </define>
   <define name="model.nameLike_sequence">
      <ref name="model.nameLike.agent_sequence"/>
      <ref name="model.offsetLike_sequence"/>
      <ref name="model.placeStateLike_sequence"/>
      <ref name="idno"/>
      <ref name="model.persNamePart_sequence"/>
   </define>
   <define name="model.nameLike_sequenceOptional">
      <optional>
         <ref name="model.nameLike.agent_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="model.offsetLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="model.placeStateLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="idno"/>
      </optional>
      <optional>
         <ref name="model.persNamePart_sequenceOptional"/>
      </optional>
   </define>
   <define name="model.nameLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="model.nameLike.agent_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="model.offsetLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="model.placeStateLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="idno"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="model.persNamePart_sequenceOptionalRepeatable"/>
      </zeroOrMore>
   </define>
   <define name="model.nameLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="model.nameLike.agent_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="model.offsetLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="model.placeStateLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="idno"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="model.persNamePart_sequenceRepeatable"/>
      </oneOrMore>
   </define>
   <define name="model.global">
      <choice>
         <ref name="model.global.meta"/>
         <ref name="model.milestoneLike"/>
         <ref name="model.noteLike"/>
         <ref name="model.global.edit"/>
      </choice>
   </define>
   <define name="model.pPart.data">
      <choice>
         <ref name="model.dateLike"/>
         <ref name="model.measureLike"/>
         <ref name="model.addressLike"/>
         <ref name="model.nameLike"/>
      </choice>
   </define>
   <define name="model.phrase">
      <choice>
         <ref name="model.segLike"/>
         <ref name="model.highlighted"/>
         <ref name="model.graphicLike"/>
         <ref name="model.pPart.msdesc"/>
         <ref name="model.pPart.edit"/>
         <ref name="model.ptrLike"/>
         <ref name="model.lPart"/>
         <ref name="model.phrase.xml"/>
         <ref name="model.specDescLike"/>
         <ref name="model.pPart.data"/>
      </choice>
   </define>
   <define name="idno">
      <element name="idno">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(Bezeichner) lieferte jegliche Form eines Bezeichners in einer standardisierten Form, der benutzt werden kann um Objekte zu identifiziert, wie etwa ein bibliographisches Element, eine Organisation, usw. [13.3.1. Basic Principles 2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.12.2.4. Imprint, Size of a Document, and Reprint Information]</a:documentation>
         <choice>
            <ref name="pnd.pattern"/>
            <ref name="viaf.pattern"/>
            <ref name="bd.pattern"/>
            <ref name="geonames.pattern"/>
         </choice>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="hwhPlaces-idno-types-match-external-identifiers-constraint-rule-6">
            <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns:s="http://www.ascc.net/xml/schematron"
                      xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:idno[@type='gnd']">
               <sch:assert test="matches(., '^1[01]?\d{7}[0-9X]|[47]\d{6}-\d|[1-9]\d{0,7}-[0-9X]|3\d{7}[0-9X]$')">That doesn't look like a valid GND ID.</sch:assert>
            </sch:rule>
            <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns:s="http://www.ascc.net/xml/schematron"
                      xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:idno[@type='viaf']">
               <sch:assert test="matches(., '^[1-9]\d(\d{0,7}|\d{17,20})$')">That doesn't look like a valid VIAF ID.</sch:assert>
            </sch:rule>
            <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns:s="http://www.ascc.net/xml/schematron"
                      xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:idno[@type='geonames']">
               <sch:assert test="matches(., '^[1-9][0-9]{0,8}$')">That doesn't look like a valid Geonames ID.</sch:assert>
            </sch:rule>
         </pattern>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="hwhPlaces-idno-match-external-identifiers-constraint-rule-9">
            <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns:s="http://www.ascc.net/xml/schematron"
                      xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:idno[parent::tei:place]">
               <sch:report test="@type=('bd')">Bach IDs are not meant for places.</sch:report>
            </sch:rule>
            <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns:s="http://www.ascc.net/xml/schematron"
                      xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:idno[parent::tei:person]">
               <sch:report test="@type=('geonames')">Geonames IDs are not meant for persons.</sch:report>
            </sch:rule>
         </pattern>
         <ref name="att.datable.attributes"/>
         <ref name="att.typed.attribute.subtype"/>
         <attribute name="type">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">charakterisiert das Element in einem gewissen Sinne, wobei irgendeine zweckmäßige Systematik oder Typologie angewendet wird.</a:documentation>
            <choice>
               <value>gnd</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(Gemeinsame Normdatei) </a:documentation>
               <value>viaf</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(Virtual International Authority File) </a:documentation>
               <value>bd</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(Bach Digital Identifikator) </a:documentation>
               <value>geonames</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">ID von http://www.geonames.org/</a:documentation>
            </choice>
         </attribute>
         <empty/>
      </element>
   </define>
   <define name="model.persNamePart">
      <notAllowed/>
   </define>
   <define name="model.persNamePart_alternation">
      <notAllowed/>
   </define>
   <define name="model.persNamePart_sequence">
      <empty/>
   </define>
   <define name="model.persNamePart_sequenceOptional">
      <empty/>
   </define>
   <define name="model.persNamePart_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="model.persNamePart_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="placeName">
      <element name="placeName">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(place name) enthält einen absoluten oder relativen Ortsnamen. [13.2.3. Place Names]</a:documentation>
         <text/>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="hwhPlaces-placeName-count-modern-names-constraint-rule-11">
            <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:placeName[@type='modern']">
               <sch:let name="lang" value="string(@xml:lang)"/>
               <sch:report test="following-sibling::tei:placeName[@type='modern'][string(@xml:lang)=$lang]">Only one modern name per xml:lang allowed.</sch:report>
            </sch:rule>
         </pattern>
         <optional>
            <attribute name="key">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
               <data type="string">
                  <param name="pattern">A13[0-9A-F]{5}</param>
               </data>
            </attribute>
         </optional>
         <attribute name="type">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">charakterisiert das Element in einem gewissen Sinne, wobei irgendeine zweckmäßige Systematik oder Typologie angwendet wird.</a:documentation>
            <choice>
               <value>reg</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(regulär) die Ansetzungsform der WeGA basierend auf der historischen Bezeichnung Webers.</a:documentation>
               <value>alt</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(Alternative) </a:documentation>
               <value>modern</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">die atuelle, verwaltungssprachliche Namensform.</a:documentation>
            </choice>
         </attribute>
         <empty/>
      </element>
   </define>
   <define name="country">
      <element name="country">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(country) contains the name of a geo-political unit, such as a nation, country, colony, or commonwealth, larger than or administratively superior to a region and smaller than a bloc. [13.2.3. Place Names]</a:documentation>
         <ref name="macro.phraseSeq"/>
         <ref name="att.global.attributes"/>
         <ref name="att.naming.attribute.nymRef"/>
         <ref name="att.naming.attribute.role"/>
         <ref name="att.canonical.attribute.ref"/>
         <ref name="att.typed.attributes"/>
         <ref name="att.datable.attributes"/>
         <optional>
            <attribute name="key">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
               <data type="string">
                  <param name="pattern">A13[0-9A-F]{5}</param>
               </data>
            </attribute>
         </optional>
         <empty/>
      </element>
   </define>
   <define name="geo">
      <element name="geo">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(geographische Koordinaten) enthält einen Terminus eines Sets von geographischen Koordinaten, die einen Punkt, eine Linie oder einen Bereich der Erde in einer bestimmten Schreibweise darstellen. [13.3.4.1. Varieties of Location]</a:documentation>
         <text/>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="hwhPlaces-geo-whitespace-separated-coordinates-constraint-assert-6">
            <rule context="tei:geo">
               <sch:assert xmlns:xi="http://www.w3.org/2001/XInclude"
                           xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                           xmlns="http://www.tei-c.org/ns/1.0"
                           xmlns:rng="http://relaxng.org/ns/structure/1.0"
                           test="matches(., '^\-?\d+(\.\d+)? \-?\d+(\.\d+)?$')">There must be two coordinates, separated with a whitespace only (no comma!)</sch:assert>
            </rule>
         </pattern>
      </element>
   </define>
   <define name="location">
      <element name="location">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(location) definiert die Lage eines Ortes in einer Reihe von geographischen Koordinaten, in Bezug auf die anderen genannten geo-politische Einheiten, oder als eine Adresse. [13.3.4. Places]</a:documentation>
         <ref name="geo"/>
      </element>
   </define>
   <define name="place">
      <element name="place">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(place) enthält Daten eines geographischen Ortes. [13.3.4. Places]</a:documentation>
         <choice>
            <element name="ref">
               <attribute name="type">
                  <choice>
                     <value>duplicate</value>
                     <value>deletion</value>
                  </choice>
               </attribute>
               <attribute name="target">
                  <data type="string">
                     <param name="pattern">A13[0-9A-F]{5}</param>
                  </data>
               </attribute>
               <empty/>
            </element>
            <group>
               <zeroOrMore>
                  <ref name="idno"/>
               </zeroOrMore>
               <oneOrMore>
                  <ref name="placeName"/>
               </oneOrMore>
               <optional>
                  <ref name="location"/>
               </optional>
               <optional>
                  <ref name="listPlace"/>
               </optional>
            </group>
         </choice>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="hwhPlaces-place-listorg-place-status-constraint-rule-12">
            <sch:rule xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:place[not(parent::tei:listPlace)]">
               <sch:assert test="@status">@status is missing.</sch:assert>
            </sch:rule>
            <sch:rule xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:place[parent::tei:listPlace]">
               <sch:report test="@status">@status is only for use at the root element.</sch:report>
            </sch:rule>
         </pattern>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="hwhPlaces-place-listorg-place-source-constraint-rule-14">
            <sch:rule xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:place[not(parent::tei:listPlace)]">
               <sch:assert test="@source">@source is missing.</sch:assert>
            </sch:rule>
            <sch:rule xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      context="tei:place[parent::tei:listPlace]">
               <sch:report test="@source">@source is only for use at the root element.</sch:report>
            </sch:rule>
         </pattern>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="hwhPlaces-place-placeName_reg-constraint-assert-9">
            <rule context="tei:place">
               <sch:assert xmlns:xi="http://www.w3.org/2001/XInclude"
                           xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                           xmlns="http://www.tei-c.org/ns/1.0"
                           xmlns:rng="http://relaxng.org/ns/structure/1.0"
                           test="(tei:placeName[1][@type='reg'] and count(./tei:placeName[@type='reg']) = 1) or tei:ref">tei:place muss (genau) ein placeName@type="reg" enthalten</sch:assert>
            </rule>
         </pattern>
         <optional>
            <attribute name="status">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
               <choice>
                  <value>proposed</value>
                  <value>candidate</value>
                  <value>approved</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="source">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
               <choice>
                  <value>HWH</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Orte aus dem Datenbestand des Projektes Henze-Digital (HWH).</a:documentation>
                  <value>WeGA</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Orte aus dem Datenbestand der Weber-Gesamtausgabe (WeGA).</a:documentation>
               </choice>
            </attribute>
         </optional>
         <attribute name="xml:id">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(Bezeichner) liefert einen eindeutigen Bezeichner für das Element mit dem Attribut.</a:documentation>
            <data type="string">
               <param name="pattern">A13[0-9A-F]{5}</param>
            </data>
         </attribute>
         <empty/>
      </element>
   </define>
   <define name="listPlace">
      <element name="listPlace">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(list of places) contains a list of places, optionally followed by a list of relationships (other than containment) defined amongst them. [ ]</a:documentation>
         <oneOrMore>
            <ref name="place"/>
         </oneOrMore>
         <ref name="att.global.attributes"/>
         <ref name="att.typed.attributes"/>
         <empty/>
      </element>
   </define>
   <start>
      <choice>
         <ref name="place"/>
      </choice>
   </start>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-styleguide-document-node-content-constraint-rule-16">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="document-node()">
         <sch:report test="count(processing-instruction()) ne 2">Henze-Digital styleguide error: there should exactly be two processing instructions before the root element</sch:report>
         <sch:report test="comment()">Henze-Digital styleguide error: there should be no comments outside the root element</sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-whitespaceOnlyContent-constraint-rule-17">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:surname | tei:forename | tei:persName | tei:author[not(@sameAs)] | tei:occupation | tei:settlement | tei:country | tei:region | tei:rs | tei:workName | tei:characterName | tei:hi[not(.//tei:gap)] | tei:head | tei:note[not(@type=('thematicCom'))] | tei:placeName | tei:title | tei:seg | tei:item[not(@* or *)] | tei:term">
         <sch:report test="normalize-space(.) = ''">
            <sch:name/> has whitespace only content</sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-elementStartsWithWhitespace-constraint-rule-18">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:surname | tei:forename | tei:persName[not(@type)][not(./child::element())] | tei:author | tei:occupation | tei:settlement[not(tei:address)][not(./child::element())] | tei:country | tei:region | tei:rs[not(./child::element())] | tei:workName | tei:characterName | tei:hi | tei:placeName[not(parent::tei:address or parent::tei:birth or parent::tei:death)][not(./child::element())]">
         <sch:report test="matches(.,'^\s') and (node()[1] = text()[1])">whitespace at the beginning of element <sch:name/>
         </sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-untrimmedAttributeValues-constraint-rule-19">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="*">
         <sch:report test="some $i in @* satisfies string-length(normalize-unicode(normalize-space(replace($i, ' | | | ', ' ')))) ne string-length($i)">There is some whitespace here at the beginning or end of some attribute value.</sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-hwhTargets-constraint-rule-20">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="*[starts-with(@target, 'hwh:')]">
         <sch:assert test="matches(@target, '^hwh:A\d{2}[0-9A-F]{5}(#.+)?(\s+hwh:A\d{2}[0-9A-F]{5}(#.+)?)*$')">"hwh"-prefixed URIs must follow the pattern "hwh:A\d{2}[0-9A-F]{5}" (i.e. without any file extension)</sch:assert>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-emojiCheck-constraint-rule-21">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="*[some $i in text() satisfies normalize-space($i) ne '']">
         <sch:report test="matches(.,                         '[⌚-⌛]|[⏩-⏬]|[⏰]|[⏳]|[◽-◾]|[☔-☕]|[♈-♓]|[♿]|[⚓]|[⚡]|[⚪-⚫]|[⚽-⚾]|[⛄-⛅]|[⛎]|[⛔]|[⛪]|[⛲-⛳]|[⛵]|[⛺]|[⛽]|[✅]|[✊-✋]|[✨]|[❌]|[❎]|[❓-❕]|[❗]|[➕-➗]|[➰]|[➿]|[⬛-⬜]|[⭐]|[⭕]|[🀄]|[🃏]|[🆎]|[🆑-🆚]|[🇦-🇿]|[🈁]|[🈚]|[🈯]|[🈲-🈶]|[🈸-🈺]|[🉐-🉑]|[🌀-🌠]|[🌭-🌯]|[🌰-🌵]|[🌷-🍼]|[🍾-🍿]|[🎀-🎓]|[🎠-🏄]|[🏅]|[🏆-🏊]|[🏏-🏓]|[🏠-🏰]|[🏴]|[🏸-🏿]|[🐀-🐾]|[👀]|[👂-📷]|[📸]|[📹-📼]|[📿]|[🔀-🔽]|[🕋-🕎]|[🕐-🕧]|[🕺]|[🖕-🖖]|[🖤]|[🗻-🗿]|[😀]|[😁-😐]|[😑]|[😒-😔]|[😕]|[😖]|[😗]|[😘]|[😙]|[😚]|[😛]|[😜-😞]|[😟]|[😠-😥]|[😦-😧]|[😨-😫]|[😬]|[😭]|[😮-😯]|[😰-😳]|[😴]|[😵-🙀]|[🙁-🙂]|[🙃-🙄]|[🙅-🙏]|[🚀-🛅]|[🛌]|[🛐]|[🛑-🛒]|[🛕]|[🛫-🛬]|[🛴-🛶]|[🛷-🛸]|[🛹]|[🛺]|[🟠-🟫]|[🤍-🤏]|[🤐-🤘]|[🤙-🤞]|[🤟]|[🤠-🤧]|[🤨-🤯]|[🤰]|[🤱-🤲]|[🤳-🤺]|[🤼-🤾]|[🤿]|[🥀-🥅]|[🥇-🥋]|[🥌]|[🥍-🥏]|[🥐-🥞]|[🥟-🥫]|[🥬-🥰]|[🥱]|[🥳-🥶]|[🥺]|[🥻]|[🥼-🥿]|[🦀-🦄]|[🦅-🦑]|[🦒-🦗]|[🦘-🦢]|[🦥-🦪]|[🦮-🦯]|[🦰-🦹]|[🦺-🦿]|[🧀]|[🧁-🧂]|[🧃-🧊]|[🧍-🧏]|[🧐-🧦]|[🧧-🧿]|[🩰-🩳]|[🩸-🩺]|[🪀-🪂]|[🪐-🪕]')">Text contains characters with Emoji presentation as default.</sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-sourceMustResolve-constraint-rule-22">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="*[starts-with(@source, '#')]">
         <sch:let name="source" value="@source"/>
         <sch:assert test="id(substring($source,2))">Unable to locate the reference provided by the @source attribute.</sch:assert>
      </sch:rule>
   </pattern>
   <sch:schema xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
               xmlns:mei="http://www.music-encoding.org/ns/mei"
               xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
               xmlns:s="http://www.ascc.net/xml/schematron"
               xmlns:sch="http://purl.oclc.org/dsdl/schematron"
               xmlns="http://www.tei-c.org/ns/1.0"
               xmlns:rng="http://relaxng.org/ns/structure/1.0"
               queryBinding="xslt2">
      <sch:ns uri="https://henze-digital.de/ns/xslt-functions" prefix="hwh-xsl"/>
      <xsl:function name="hwh-xsl:int2hex">
         <xsl:param name="number" as="xs:int"/>
         <xsl:variable name="chars"
                       select="('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F')"/>
         <xsl:variable name="div" select="$number div 16"/>
         <xsl:variable name="count" select="floor($div)"/>
         <xsl:variable name="remainder" select="($div - $count) * 16"/>
         <xsl:value-of select="concat(if($count gt 15) then hwh-xsl:int2hex(xs:integer($count))                             else if($number gt 15) then $chars[$count +1]                             else (),                             $chars[$remainder +1])"/>
      </xsl:function>
      <xsl:function name="hwh-xsl:compute-check-digit">
         <xsl:param name="id" as="xs:string"/>
         <xsl:variable name="weights" select="(2, 4, 6, 8, 9, 5, 3)"/>
         <xsl:variable name="str2codepts" select="string-to-codepoints($id)"/>
         <xsl:variable name="str2codepts-1" select="$str2codepts[1] * $weights[1]"/>
         <xsl:variable name="str2codepts-2" select="$str2codepts[2] * $weights[2]"/>
         <xsl:variable name="str2codepts-3" select="$str2codepts[3] * $weights[3]"/>
         <xsl:variable name="str2codepts-4" select="$str2codepts[4] * $weights[4]"/>
         <xsl:variable name="str2codepts-5" select="$str2codepts[5] * $weights[5]"/>
         <xsl:variable name="str2codepts-6" select="$str2codepts[6] * $weights[6]"/>
         <xsl:variable name="str2codepts-7" select="$str2codepts[7] * $weights[7]"/>
         <xsl:variable name="sum"
                       select="sum(($str2codepts-1, $str2codepts-2, $str2codepts-3, $str2codepts-4, $str2codepts-5, $str2codepts-6, $str2codepts-7))"/>
         <xsl:value-of select="hwh-xsl:int2hex(xs:int($sum mod 16))"/>
      </xsl:function>
      <xsl:function name="hwh-xsl:checkIdByCheckDigit">
         <xsl:param name="str" as="xs:string"/>
         <xsl:variable name="idStr" select="substring($str, 1, 7)"/>
         <xsl:variable name="idCheckDigit" select="substring($str, 8, 1)"/>
         <xsl:variable name="computedCheckDigit" select="hwh-xsl:compute-check-digit($idStr)"/>
         <xsl:variable name="check" select="$computedCheckDigit = $idCheckDigit"/>
         <xsl:value-of select="$check"/>
      </xsl:function>
      <sch:pattern id="idCheckDigit">
         <sch:rule context="@key | @xml:id[not(parent::tei:layout)] | @sameAs | @codedval | tei:ref[@type='deletion' or @type='duplicate']/@target">
            <sch:assert test="hwh-xsl:checkIdByCheckDigit(.) = true()" role="fatal">Something went wrong with the ID: <sch:value-of select="."/>. Computed check digit is <sch:value-of select="hwh-xsl:compute-check-digit(.)"/>.</sch:assert>
         </sch:rule>
      </sch:pattern>
   </sch:schema>
   <sch:schema xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
               xmlns:mei="http://www.music-encoding.org/ns/mei"
               xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
               xmlns:s="http://www.ascc.net/xml/schematron"
               xmlns:sch="http://purl.oclc.org/dsdl/schematron"
               xmlns="http://www.tei-c.org/ns/1.0"
               xmlns:rng="http://relaxng.org/ns/structure/1.0"
               queryBinding="xslt2">
      <sch:ns uri="https://henze-digital.de/ns/xslt-functions" prefix="hwh-xsl"/>
      <sch:ns uri="http://www.functx.com" prefix="functx"/>
      <xsl:function name="functx:escape-for-regex" as="xs:string">
         <xsl:param name="arg" as="xs:string?"/>
         <xsl:sequence select="replace($arg, '(\.|\[|\]|\\|\||\-|\^|\$|\?|\*|\+|\{|\}|\(|\))','\\$1')"/>
      </xsl:function>
      <xsl:function name="functx:substring-before-last" as="xs:string">
         <xsl:param name="arg" as="xs:string?"/>
         <xsl:param name="delim" as="xs:string"/>
         <xsl:sequence select="if (matches($arg, functx:escape-for-regex($delim))) then replace($arg, concat('^(.*)', functx:escape-for-regex($delim),'.*'), '$1') else ''"/>
      </xsl:function>
      <xsl:function name="functx:substring-after-last" as="xs:string">
         <xsl:param name="arg" as="xs:string?"/>
         <xsl:param name="delim" as="xs:string"/>
         <xsl:sequence select="replace ($arg,concat('^.*', functx:escape-for-regex($delim)),'')"/>
      </xsl:function>
      <sch:pattern id="checkFilesNameAndDir">
         <sch:rule context="root()">
            <sch:let name="docUri" value="document-uri(.)"/>
            <sch:let name="fileName"
                     value="functx:substring-after-last(substring-before($docUri, '.xml'), '/')"/>
            <sch:let name="fileDir"
                     value="functx:substring-after-last(functx:substring-before-last($docUri, '/'), '/')"/>
            <sch:assert test="./node()/@xml:id = $fileName" role="error">The id of this record does not match the files name. Please check!</sch:assert>
            <sch:assert test="$fileDir = concat(substring($fileName,1,6),'xx')" role="error">The file is stored in the wrong directory. Please check!</sch:assert>
         </sch:rule>
      </sch:pattern>
   </sch:schema>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-addWithoutPlace-constraint-rule-25">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:add[not(parent::tei:subst)]">
         <sch:assert test="@place">Missing @place, because this is no substitution here.</sch:assert>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-nameTypeRequirement-constraint-rule-26">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:name[not(ancestor::tei:teiHeader)]">
         <sch:assert test="@type">@type is required at <sch:name/>.</sch:assert>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-lbInsideAddress-constraint-rule-27">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:lb">
         <sch:report test="parent::tei:address" role="info">Does <sch:name/> mark a new line inside the address? If yes, please use &lt;addrLine&gt; instead of <sch:name/>
         </sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-renditionWithPosition-constraint-rule-28">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:addrLine[@rend and not(contains(@rend,' '))] | tei:dateline[@rend and not(contains(@rend,' '))]">
         <sch:assert test="@rend = ('right','center','left')">If only one value is set, it should should address the horizontal position ('right','center','left')</sch:assert>
      </sch:rule>
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:addrLine[@rend] | tei:dateline[@rend]">
         <sch:assert test="tokenize(@rend, ' ')[1] = ('top','middle','bottom','inline')">the first value should address the vertical position ('top','middle','bottom')</sch:assert>
         <sch:assert test="tokenize(@rend, ' ')[2] = ('right','center','left')">the second value should address the horizontal position ('right','center','left')</sch:assert>
      </sch:rule>
   </pattern>
   <sch:pattern xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                id="node-typeNkey"
                abstract="true">
      <sch:rule context="$node[@type='person'][@key]|$node[@type='character'][@key]|$node[@type='actingRole'][@key]|$node[@type='myth'][@key]">
         <sch:assert test="matches(@key, '^A00[0-9A-F]{5}$')">A type value of 'person' must have only one key, starting with 'A00'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='persons'][@key]|$node[@type='characters'][@key]|$node[@type='actingRoles'][@key]|$node[@type='myths'][@key]">
         <sch:assert test="matches(@key, '^(A00[0-9A-F]{5}\s)*A00[0-9A-F]{5}$')">A type value of 'persons' must have at least one key, each starting with 'A00'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='work'][@key]">
         <sch:assert test="matches(@key, '^A02[0-9A-F]{5}$')">A type value of 'work' must have only one key, starting with 'A02'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='works'][@key]">
         <sch:assert test="matches(@key, '^(A02[0-9A-F]{5}\s)*A02\d{5}$')">A type value of 'works' must have at least one key, each starting with 'A02'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='writing'][@key]">
         <sch:assert test="matches(@key, '^A03[0-9A-F]{5}$')">A type value of 'writing' must have only one key, starting with 'A03'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='writings'][@key]">
         <sch:assert test="matches(@key, '^(A03[0-9A-F]{5}\s)*A03[0-9A-F]{5}$')">A type value of 'writings' must have at least one key, each starting with 'A03'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='postal'][@key]">
         <sch:assert test="matches(@key, '^A04[0-9A-F]{5}$')">A type value of 'letter' must have only one key, starting with 'A04'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='postals'][@key]">
         <sch:assert test="matches(@key, '^(A04[0-9A-F]{5}\s)*A04[0-9A-F]{5}$')">A type value of 'letters' must have at least one key, each starting with 'A04'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='news'][@key]">
         <sch:assert test="matches(@key, '^(A05[0-9A-F]{5}\s)*A05[0-9A-F]{5}$')">A type value of 'news' must have at least one key, starting with 'A05'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='diaryDay'][@key]">
         <sch:assert test="matches(@key, '^A06[0-9A-F]{5}$')">A type value of 'diaryDay' must have only one key, starting with 'A06'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='diaryDays'][@key]">
         <sch:assert test="matches(@key, '^(A06[0-9A-F]{5}\s)*A06[0-9A-F]{5}$')">A type value of 'diaryDays' must have at least one key, each starting with 'A06'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='org'][@key]">
         <sch:assert test="matches(@key, '^A08[0-9A-F]{5}$')">A type value of 'org' must have only one key, starting with 'A08'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='orgs'][@key]">
         <sch:assert test="matches(@key, '^(A08\d{5}\s)*A08\d{5}$')">A type value of 'orgs' must have at least one key, each starting with 'A08'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='document'][@key]">
         <sch:assert test="matches(@key, '^A10\d{5}$')">A type value of 'document' must have only one key, starting with 'A10'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='documents'][@key]">
         <sch:assert test="matches(@key, '^(A10[0-9A-F]{5}\s)*A10[0-9A-F]{5}$')">A type value of 'documents' must have at least one key, each starting with 'A10'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='biblio'][@key]">
         <sch:assert test="matches(@key, '^(A11[0-9A-F]{5}\s)*A11[0-9A-F]{5}$')">A type value of 'biblio' must have at least one key, each starting with 'A11'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='addenda'][@key]">
         <sch:assert test="matches(@key, '^A12[0-9A-F]{5}$')">A type value of 'addenda' must have only one key, starting with 'A12'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='place'][@key] | $node[@type='venue'][@key]">
         <sch:assert test="matches(@key, '^A13[0-9A-F]{5}$')">A type value of 'place' must have only one key, starting with 'A13'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='places'][@key]">
         <sch:assert test="matches(@key, '^(A13[0-9A-F]{5}\s)*A13[0-9A-F]{5}$')">A type value of 'places' must have at least one key, each starting with 'A13'</sch:assert>
      </sch:rule>
      <sch:rule context="$node[@type='mixed'][@key]">
         <sch:assert test="count(distinct-values(for $i in tokenize(@key, '\s+') return substring($i, 1, 3))) gt 1">A type value of 'mixed' must have keys referring to different document types</sch:assert>
      </sch:rule>
   </sch:pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-importName-constraint-rule-50">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="tei:persName | tei:orgName | tei:placeName">
         <sch:report test="@type='import'" role="info">This element should be deleted after checking this record.</sch:report>
      </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="hwhPlaces-styleguide-document-node-content-constraint-rule-51">
      <sch:rule xmlns:mei="http://www.music-encoding.org/ns/mei"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns:s="http://www.ascc.net/xml/schematron"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                context="document-node()">
         <sch:report test="count(processing-instruction()) ne 2">Henze-Digital styleguide error: there should exactly be two processing instructions before the root element</sch:report>
         <sch:report test="comment()">Henze-Digital styleguide error: there should be no comments outside the root element</sch:report>
      </sch:rule>
   </pattern>
</grammar>
