# GitLab CI configuration for the "HenDi-WebApp"
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

stages:
  - build-app
  - build-docker
  - deploy

build-webapp:
  stage: build-app
  image: registry.git.uni-paderborn.de/vife/henze-digital/hendi-ci-docker-image:develop
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - ant xar -Dsass.path=`which sass` -Dminify.path=`which minify` -Dbuild.env=`ci` -DCI_JOB_TOKEN=${CI_JOB_TOKEN}
  artifacts:
    paths:
      - hendi-pkg-webapp/HenDi-WebApp-*.xar
  only:
    refs:
      - merge_requests
      - develop

docker-image:
  stage: build-docker
  image: docker:20.10
  services:
    - docker:20.10-dind
  needs: [build-webapp]
  dependencies:
    - build-webapp
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker run --privileged --rm tonistiigi/binfmt --install all
    - docker buildx create --name mybuilder --use
    - docker buildx build --build-arg CI_JOB_TOKEN=${CI_JOB_TOKEN} --platform linux/arm64,linux/amd64 --push -t ${IMAGE_TAG} .
  only:
    - merge_requests
    #- develop

deploy:
  stage: deploy
  image: curlimages/curl
  needs: [docker-image]
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop" && $CI_COMMIT_MESSAGE  =~ /\(ready\)/'
      when: always
    - if: '$cronUpdatePortalIntern == "true"'
      when: always
  script:
    - >
      curl -X POST https://keel3.edirom.de/v1/webhooks/native -H 'Content-Type: application/json' -d '{"name": "'${CI_REGISTRY_IMAGE}'", "tag": "'${CI_COMMIT_REF_SLUG}'"}'
