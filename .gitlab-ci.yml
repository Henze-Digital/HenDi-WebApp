# GitLab CI configuration for building the "HenDi-WebApp"
variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    HENDI_CI_IMAGE: registry.git.uni-paderborn.de/vife/henze-digital/hendi-ci-docker-image:v1-2-0
    GIT_SUBMODULE_STRATEGY: recursive # is also defined in the jobs. Why?
    GIT_DEPTH: 5
    #URL_CI_REGISTRY: "registry.git.uni-paderborn.de/vife/henze-digital/hwh-webapp"

stages:
  - update
  - build

# jobs for updating
update:submodules:
  stage: update
  image: $HENDI_CI_IMAGE
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git config pull.rebase true
    - git remote set-url origin https://${HENDI_DATA_CI_TOKEN_NAME}:${HENDI_DATA_CI_TOKEN}@git.uni-paderborn.de/vife/henze-digital/hwh-webapp.git
    - git pull origin ${CI_COMMIT_REF_NAME} #--allow-unrelated-histories
    - cd submodules/HenDi-ODD
    - git checkout develop
    - git pull
    - cd ../../
    - |- 
      if [[ -z $(git status -s) ]];
      then
        echo "No changes detected. Nothing to commit."
      else
        git add submodules/HenDi-ODD
        git commit -m "auto update submodule"
        git push origin HEAD:${CI_COMMIT_REF_NAME} -o ci.skip
      fi
  only:
    variables:
      - $TRIGGER_UPDATE_SUBMODULE == "true"

# jobs for building the webapp
build:develop:
  stage: build
  image: $HENDI_CI_IMAGE
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - ant xar -Dbuild.env.ci=true -DCI_JOB_TOKEN=${CI_JOB_TOKEN}
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
  after_script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./hendi-pkg-webapp/HenDi-WebApp-*.xar "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hendi-webapp/latest/HenDi-WebApp-latest.xar"'

build:merge_request:
  stage: build
  image: $HENDI_CI_IMAGE
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - ant xar -Dbuild.env.ci=true -DCI_JOB_TOKEN=${CI_JOB_TOKEN}
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - when: never
  after_script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./hendi-pkg-webapp/HenDi-WebApp-*.xar "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hendi-webapp/merge_request/HenDi-WebApp-${CI_COMMIT_REF_SLUG}-latest.xar"'

build:stable:
  stage: build
  image: $HENDI_CI_IMAGE
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - ant xar -Dbuild.env.ci=true -DCI_JOB_TOKEN=${CI_JOB_TOKEN}
  rules:
    - if: $CI_COMMIT_BRANCH == "stable"
      when: always
    - if: $BUILD_WEBAPP_STABLE == "true"
      when: always
    - when: never
  after_script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./hendi-pkg-webapp/HenDi-WebApp-*.xar "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hendi-webapp/stable/HenDi-WebApp-latest.xar"'

build:stable-zenodo:
  stage: build
  image: $HENDI_CI_IMAGE
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - ant xar -Dbuild.env.ci=true -DCI_JOB_TOKEN=${CI_JOB_TOKEN} -Dpublishing=true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_BRANCH == "stable"
      when: always
    - if: $BUILD_WEBAPP_STABLE == "true"
      when: always
    - if: $CI_COMMIT_BRANCH =~ /^release/
      when: always
    - when: never
  after_script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./hendi-pkg-webapp/HenDi-WebApp-*.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hendi-webapp/stable-zenodo/HenDi-WebApp-latest.zip"'
