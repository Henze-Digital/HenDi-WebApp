# GitLab CI configuration for the "HenDi-WebApp"
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://localhost:2375
  CI_BRANCH_NAME: develop
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_BRANCH_NAME
  IMAGE_TAG_MULTI: ${IMAGE_TAG}_multi

stages:
  - build-app
  - build-docker
  - deploy

.install_dependencies:
  image: ubuntu
  before_script:
    - apt update -y
    #- apt upgrade -y
    - apt install -y gnupg2 curl
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt update -y
    - apt install -y yarn unzip
    - apt install -y --no-install-recommends ant git sass minify

build-webapp:
  stage: build-app
  extends: .install_dependencies
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - ant xar -Dsass.path=`which sass` -Dminify.path=`which minify` -Dbuild.env=`ci` -DCI_JOB_TOKEN=${CI_JOB_TOKEN}
  artifacts:
    paths:
      - hendi-pkg-webapp/HenDi-WebApp-*.xar
  only:
    refs:
      - merge_requests
      #- develop

docker-image:
  stage: build-docker
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  needs: [build-webapp]
  dependencies:
    - build-webapp
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --network host --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - merge_requests
    #- develop

deploy:
  stage: deploy
  image: curlimages/curl
  #needs: [docker-image]
  script:
    - >
      curl -X POST https://keel3.edirom.de/v1/webhooks/native -H 'Content-Type: application/json' -d '{"name": "registry.git.uni-paderborn.de/vife/henze-digital/hwh-webapp", "tag": "develop"}'
    - echo $CI_BRANCH_NAME
  only:
    - develop
