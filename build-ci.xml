<?xml version="1.0" encoding="UTF-8"?>
<project default="xar" name="HWH-WebApp-ci" basedir="." xmlns:unless="ant:unless">
    
    <dirname property="HWH-WebApp-ci.basedir" file="${ant.file.HWH-WebApp}"/>
    
    <!-- import default properties from file -->
    <property file="${HWH-WebApp.basedir}/local.build.properties" prefix="hwh"/>
    <property file="${HWH-WebApp.basedir}/build.properties" prefix="hwh"/>
    
    <target name="clean">
        <echo>Cleaning task. Deleting content of temp and dist dirs.</echo>
        <delete dir="dist"/>
        <delete dir="dist-temp"/>
        <delete dir="temp"/>
        
        <mkdir dir="dist"/>
        <mkdir dir="dist-temp"/>
        <mkdir dir="temp"/>
<!--        <ant antfile="build.xml" dir="temp/WeGA-WebApp/" target="clean"/>-->
    </target>
    
    <target name="clone-wega-webapp-repo">
        <exec executable="git" dir="temp" failonerror="true">
            <arg line="clone https://github.com/Henze-Digital/WeGA-WebApp.git WeGA-WebApp" />
        </exec>
        <echo>Set properties for WeGA-WebApp build.xml</echo>
        <property file="temp/WeGA-WebApp/local.build.properties"/>
        <property file="temp/WeGA-WebApp/build.properties"/>
    </target>
    <target name="clone-hwh-odd">
        <exec executable="git" dir="temp" failonerror="true">
            <arg line="clone https://github.com/Henze-Digital/HWH-ODD.git HWH-ODD" />
        </exec>
    </target>
    <target name="clone-hwh-secrets">
        <exec executable="git" dir="temp" failonerror="true">
            <arg line="clone https://git.uni-paderborn.de/vife/henze-digital/hwh-data-internal-only.git hwh-data-internal-only" />
        </exec>
    </target>
    
    <target name="init">
        <antcall target="clean"/>
        <antcall target="clone-wega-webapp-repo"/>
        <antcall target="clone-hwh-odd"/>
        <antcall target="clone-hwh-secrets"/>
    </target>
    
    <target name="build-wega-xar" depends="init">
        <echo>Building the WeGA-WebApp.xar</echo>
        <echo>Executing ant xar at WeGA-WebApp repo (build.xml) </echo>
        <ant antfile="build.xml" dir="temp/WeGA-WebApp/" target="xar"/>
        <echo>Finished build of WeGA-WebApp. Build successful.</echo>
    </target>
    
    <target name="get-wega-xar-data" depends="build-wega-xar">
        <echo>Get the WeGA-WebApp.xar (unzip to dist dir).</echo>
        <unzip src="temp/WeGA-WebApp/build/*.xar" dest="dist"/>
    </target>
    
    <target name="prepare-hwh-specs" depends="init">
        <echo>Prepare the WebApp-specs for Henze-Digital.</echo>
        <antcall target="prepare-package-files"/>
        <antcall target="prepare-css"/>
        <antcall target="prepare-hwh-odd"/>
    </target>
    
    <target name="prepare-package-files">
        <echo>Create expath-pkg.xml</echo>
        <copy file="data/expath-pkg.xml.tmpl" tofile="dist-temp/expath-pkg.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="project.app" value="${hwh.project.app}"/>
                <filter token="project.name" value="${hwh.project.name}"/>
                <filter token="project.version" value="${hwh.project.version}"/>
            </filterset>
        </copy>
        <echo>Create repo.xml</echo>
        <copy file="data/repo.xml.tmpl" tofile="dist-temp/repo.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="project.app" value="${hwh.project.app}"/>
                <filter token="project.author" value="${hwh.project.author}"/>
                <filter token="project.name" value="${hwh.project.name}"/>
            </filterset>
        </copy>
    </target>
    
    <target name="prepare-css">
        <echo>Get sass data from WeGA</echo>
        <copy todir="dist-temp/resources/sass/">
            <fileset dir="temp/WeGA-WebApp/resources/sass/">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <echo>Get sass data from Henze-Digital</echo>
        <copy todir="dist-temp/resources/sass/" overwrite="yes">
            <fileset dir="data/resources/sass/">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <echo>Create CSS files via sass</echo>
        <copy todir="dist-temp/" overwrite="yes">
            <fileset dir="temp/WeGA-WebApp/">
                <include name="node_modules/bootstrap/**"/>
                <include name="node_modules/font-awesome/**"/>
            </fileset>
        </copy>
        <exec executable="temp/WeGA-WebApp/${dev_libs.dir}/sass/sass.js">
            <arg line="dist-temp/resources/sass/main.scss dist-temp/resources/css/styles.css"/>
        </exec>
        <echo>Run minify on CSS files</echo>
        <apply executable="temp/WeGA-WebApp/${dev_libs.dir}/minify/bin/minify.js" parallel="false">
            <fileset dir="dist-temp/resources/css" includes="*.css" excludes="*min.css"/>
            <redirector>
                <outputmapper type="glob" from="*.css" to="dist-temp/resources/css/*-min.css"/>
            </redirector>
        </apply>
    </target>
    
    <target name="prepare-hwh-odd">
        <echo>Get HWH-ODD data</echo>
        <copy todir="dist-temp/HWH-ODD">
            <fileset dir="temp/HWH-ODD">
                <include name="compiled-ODD/*.xml"/>
                <include name="src/**/*.xml"/>
            </fileset>
        </copy>
    </target>
    
    <target name="update-dist" depends="get-wega-xar-data, prepare-hwh-specs">
        <echo>Override the unzipped WeGA-WebApp data with hwh-webapp specs</echo>
        <echo>Copy hwh-spec data.</echo>
        <copy todir="dist/" overwrite="yes">
            <fileset dir="data/">
                <include name="catalogues/"/>
                <include name="resources/favicons/"/>
                <include name="templates/"/>
                <include name="controller.xql"/>
                <include name="README.md"/>
                <include name="LICENSE"/>
                <exclude name="*.tmpl"/>
            </fileset>
        </copy>
        <echo>Copy processed hwh-spec data (dist-temp)</echo>
        <copy todir="dist" overwrite="yes">
            <fileset dir="dist-temp">
                <include name="*.*"/>
                <include name="resources/"/>
                <include name="templates/"/>
                <exclude name="node_modules/"/>
            </fileset>
        </copy>
        <echo>Add icon.png</echo>
        <copy todir="dist" overwrite="yes">
            <file file="temp/hwh-data-internal-only/wega-app/img/icon.png"/>
        </copy>
        <echo>Add image files to resources/img</echo>
        <copy todir="dist/resources/img/" overwrite="yes">
            <fileset dir="temp/hwh-data-internal-only/wega-app/img/">
                <include name="*.png"/>
                <include name="*.jpg"/>
                <exclude name="icon.png"/>
            </fileset>
        </copy>
        <echo>Add favicons.</echo>
        <copy todir="dist/resources/favicons" overwrite="yes">
            <fileset dir="temp/hwh-data-internal-only/wega-app/">
                <include name="favicon*.png"/>
            </fileset>
        </copy>
        
        <echo>Override the WeGA-ODD with HWH-ODD data</echo>
        <delete file="dist/resources/lib/WeGA-ODD/build.xml"/>
        <copy todir="dist/resources/lib/WeGA-ODD" overwrite="yes">
            <fileset dir="dist-temp/HWH-ODD">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <echo>Override the WeGA Guidelines with the Henze-Digital Guidelines</echo>
        <delete file="dist/guidelines/*.*"/>
        <copy todir="dist/guidelines">
            <fileset dir="dist-temp/HWH-ODD/compiled-ODD">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>
    
    <target name="xar" depends="update-dist">
        <echo>Creating the xar Package (zipping).</echo>
        <zip destfile="build/${hwh.project.app}-${hwh.project.version}.xar">
            <fileset dir="dist"/>
        </zip>
    </target>
</project>
