<?xml version="1.0" encoding="UTF-8"?>
<project default="xar" name="HWH-WebApp" basedir="." xmlns:unless="ant:unless">
    
    <!-- import default properties from file -->
    <!--    <property file="local.build.properties"/>-->
    <property file="../WeGA-WebApp/build.properties"/>
    
    <!-- Import build script for building WeGA-WebApp -->
    <import file="../WeGA-WebApp/build.xml" as="wega" prefixseparator=":"/>
    
    <!-- build WeGA-WebApp and get package and unzip it to local dist dir -->
    <target name="build-wega-pkg">
        <ant antfile="build.xml" dir="../WeGA-WebApp/"/>
        <unzip src="../WeGA-WebApp/build/WeGA-WebApp-4.4.0.xar" dest="../hwh-webapp/dist"/>
    </target>
    
    <!-- load properties for hwh -->
    
    <property file="build.properties" prefix="hwh"/>
    <!-- build hwh-webapp -->
    <target name="build-hwh-specs">
        
        <!-- create expath-pkg.xml -->
        <copy file="data/expath-pkg.xml.tmpl" tofile="dist-hwhSpecs/expath-pkg.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="project.app" value="${hwh.project.app}"/>
                <filter token="project.name" value="${hwh.project.name}"/>
                <filter token="project.version" value="${hwh.project.version}"/>
            </filterset>
        </copy>
        
        <!-- create repo.xml -->
        <copy file="data/repo.xml.tmpl" tofile="dist-hwhSpecs/repo.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="project.app" value="${hwh.project.app}"/>
                <filter token="project.author" value="${hwh.project.author}"/>
                <filter token="project.name" value="${hwh.project.name}"/>
            </filterset>
        </copy>
        
        <!-- get sass data from wega -->
        <copy todir="../hwh-webapp/dist-hwhSpecs/resources/sass/">
            <fileset dir="../WeGA-WebApp/resources/sass/">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <!-- get sass data from hwh -->
        <copy todir="../hwh-webapp/dist-hwhSpecs/" overwrite="yes">
            <fileset dir="../hwh-webapp/data/">
                <include name="**/*.*"/>
            </fileset>
            <fileset dir="../WeGA-WebApp/">
                <include name="node_modules/bootstrap/**"/>
                <include name="node_modules/font-awesome/**"/>
            </fileset>
        </copy>
        
        <echo>Create CSS files via sass</echo>
        <exec executable="../WeGA-WebApp/${dev_libs.dir}/sass/sass.js">
            <arg line="../hwh-webapp/dist-hwhSpecs/resources/sass/main.scss ../hwh-webapp/dist-hwhSpecs/resources/css/styles.css"/>
        </exec>
        
        <echo>Run minify on CSS files</echo>
        <apply executable="../WeGA-WebApp/${dev_libs.dir}/minify/bin/minify.js" parallel="false">
            <fileset dir="../hwh-webapp/dist-hwhSpecs/resources/css" includes="*.css" excludes="*min.css"/>
            <redirector>
                <outputmapper type="glob" from="*.css" to="dist-hwhSpecs/resources/css/*-min.css"/>
            </redirector>
        </apply>
        
    </target>
    
    <!-- override WeGA-WebApp with hwh-webapp -->
    <target name="update-dist" depends="build-wega-pkg, build-hwh-specs">
        <copy todir="../hwh-webapp/dist" overwrite="yes">
            <fileset dir="../hwh-webapp/dist-hwhSpecs">
                <include name="*.*"/>
                <include name="catalogues/"/>
                <include name="resources/"/>
                <include name="templates/"/>
                <exclude name="node_modules/**"/>
            </fileset>
            <file file="../hwh-data-internal-only/wega-app/img/icon.png"/>
        </copy>
        <copy todir="../hwh-webapp/dist/resources/img/">
            <fileset dir="../hwh-data-internal-only/wega-app/img/">
                <include name="*.png"/>
                <include name="*.jpg"/>
                <exclude name="icon.png"/>
            </fileset>
        </copy>
    </target>
    
    <!-- make package -->
    <target name="xar" depends="update-dist">
       <zip destfile="../hwh-webapp/build/${hwh.project.app}-${hwh.project.version}.xar">
           <fileset dir="../hwh-webapp/dist"/>
       </zip>
    </target>
</project>
