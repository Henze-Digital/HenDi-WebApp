<?xml version="1.0" encoding="UTF-8"?>
<project default="update-hendi-docker" name="HenDi-WebApp" basedir="submodules/WeGA-WebApp" xmlns:unless="ant:unless">
	
	<dirname property="WeGA-WebApp" file="${ant.file.HenDi-WebApp}"/>
	<property name="HenDi-WebApp.basedir" value="../../"/>
	
	<!-- import default properties from file -->
	<property file="${HenDi-WebApp.basedir}/local.build.properties" prefix="hendi"/>
	<property file="${HenDi-WebApp.basedir}/build.properties" prefix="hendi"/>
	
	<import file="submodules/WeGA-WebApp/build.xml" as="wega" prefixseparator=":"/>
	<property file="${WeGA-WebApp.basedir}/build.properties" prefix="wega"/>
	
	<target name="-set-properties" unless="${build.env}">
		<property name="sass.path" value="${WeGA-WebApp.basedir}/${wega.sass.cmd}"/>
		<echo>sass.path: ${sass.path}</echo>
		<property name="sass.utf8" value=""/>
		<echo>set sass option utf8 empty ${sass.utf8}</echo>
		<property name="minify.path" value="${WeGA-WebApp.basedir}/${wega.dev_libs.dir}/minify/bin/minify.js"/>
		<echo>minify.path: ${minify.path}</echo>
	</target>
	
	<target name="-set-properties-for-ci" if="${build.env}">
		<property name="sass.utf8" value="-E UTF-8"/>
		<echo>set sass option: ${sass.utf8}</echo>
	</target>
	
	<target name="-check-secrets-available-local" unless="${build.env}">
		<echo>The script is running locally. Checking if secrets are available</echo>
		<available type="dir" file="${HenDi-WebApp.basedir}/hendi-secrets" property="secrets.available.local"/>
		<echo>secrets.available.local: ${secrets.available.local}</echo>
	</target>
	
	<target name="-get-hendi-secrets-for-ci" if="${build.env}">
		<echo>Clone HenDi-secrets</echo>
		<exec executable="git" dir="." failonerror="no">
			<arg line="clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.uni-paderborn.de/vife/henze-digital/hwh-data-internal-only.git hendi-secrets"/>
		</exec>
	</target>
	
	<target name="-get-hendi-secrets-local" unless="${secrets.available.local}" depends="-check-secrets-available-local">
		<echo>Add HenDi-secrets to local repo</echo>
		<copy todir="${HenDi-WebApp.basedir}/hendi-secrets" failonerror="no">
			<fileset dir="${HenDi-WebApp.basedir}/../hendi-secrets">
				<include name="wega-app/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="-update-hendi-secrets-local" depends="-get-hendi-secrets-local">
		<echo>Update existing hendi-secrets in local repo</echo>
		<copy todir="${HenDi-WebApp.basedir}/hendi-secrets" overwrite="yes" failonerror="no">
			<fileset dir="${HenDi-WebApp.basedir}/../hendi-secrets">
				<include name="wega-app/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="hendi:init">
		<antcall target="wega:clean"/>
		<antcall target="wega:init"/>
		<antcall target="-set-properties"/>
		<antcall target="-set-properties-for-ci"/>
		<antcall target="-update-hendi-secrets-local"/>
	</target>
	
	<target name="hendi-sass-compilation" depends="hendi:init">
		<echo>Overwrite SASS files with HenDi data</echo>
		<copy todir="${WeGA-WebApp.basedir}/resources/sass" overwrite="yes">
			<fileset dir="data/resources/sass" includes="**"/>
		</copy>
		<echo>Add node_modules to ${WeGA-WebApp.basedir}</echo>
		<move todir="${WeGA-WebApp.basedir}/node_modules">
			<fileset dir="node_modules"/>
		</move>
		<echo>Create CSS files via sass</echo>
		<mkdir dir="${WeGA-WebApp.basedir}/resources/css"/>
		<exec executable="${sass.path}" failonerror="yes">
			<arg line="${WeGA-WebApp.basedir}/resources/sass/main.scss ${WeGA-WebApp.basedir}/resources/css/styles.css ${sass.utf8}"/>
		</exec>
	</target>
	
	<target name="hendi-package-files">
		<echo>Create expath-pkg.xml</echo>
		<copy file="${HenDi-WebApp.basedir}/data/expath-pkg.xml.tmpl" tofile="${WeGA-WebApp.basedir}/${wega.dist.dir}/expath-pkg.xml" filtering="true" overwrite="true">
			<filterset>
				<filter token="project.app" value="${hendi.project.app}"/>
				<filter token="project.name" value="${hendi.project.name}"/>
				<filter token="project.version" value="${hendi.project.version}"/>
			</filterset>
		</copy>
		<echo>Create repo.xml</echo>
		<copy file="${HenDi-WebApp.basedir}/data/repo.xml.tmpl" tofile="${WeGA-WebApp.basedir}/${wega.dist.dir}/repo.xml" filtering="true" overwrite="true">
			<filterset>
				<filter token="project.app" value="${hendi.project.app}"/>
				<filter token="project.author" value="${hendi.project.author}"/>
				<filter token="project.name" value="${hendi.project.name}"/>
			</filterset>
		</copy>
	</target>
	
	<target name="webapp-dist-libs">
		<echo>Copy libs to ${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/lib</echo>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/lib">
			<fileset dir="${wega.frontend_libs.dir}">
				<include name="**/*.js"/>
				<include name="**/*.css"/>
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
				<include name="**/*.jpg"/>
				<include name="**/*.xsl"/>
				<include name="**/*.xml"/>
				<!-- exclude unnecessary directories -->
				<exclude name="bootstrap-vue/"/>
				<exclude name="bravura/"/>
				<exclude name="core-js/"/>
				<exclude name="@fortawesome/"/>
				<exclude name="prettydiff/"/>
				<exclude name="less/"/>
				<exclude name="sass/"/>
				<exclude name="lodash/"/>
				<exclude name="minify/"/>
				<exclude name="rx/"/>
				<exclude name="vnu/"/>
				<exclude name="vnu-jar/"/>
				<exclude name="vue/"/>
				<exclude name="yuicompressor/"/>
				<!-- exclude html files. non-well-formed html makes eXist choke -->
				<exclude name="**/*.html"/>
				<!-- exclude tests to reduce file size -->
				<exclude name="**/test/**"/>
				<exclude name="**/tests.js"/>
				<exclude name="**/docs/**"/>
				<exclude name="json-*/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="webapp-dist-data-wega">
		<echo>Get data files from WeGA-WebApp dist task </echo>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}">
			<fileset dir="${WeGA-WebApp.basedir}">
				<include name="*.*"/>
				<include name="api/**"/>
				<include name="modules/**"/>
				<include name="resources/**"/>
				<include name="catalogues/**"/>
				<include name="indices/**"/>
				<include name="templates/**"/>
				<include name="xsl/**"/>
				<exclude name="build.xml"/>
				<exclude name="*build.properties"/>
				<exclude name=".git*"/>
				<exclude name="*.tmpl"/>
				<exclude name="*.txt"/>
				<exclude name="*.xpr"/>
				<exclude name="package.json"/>
				<exclude name="yarn.lock"/>
				<exclude name=".dockerignore"/>
				<exclude name=".travis.yml"/>
				<exclude name="**/less/**"/>
				<exclude name="**/sass/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="webapp-dist-data-hendi">
		<echo>Overwrite data with specs for ${hendi.project.app}</echo>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}" overwrite="yes">
			<fileset dir="${HenDi-WebApp.basedir}/data">
				<include name="api/**"/>
				<include name="*.*"/>
				<include name="catalogues/**"/>
				<include name="modules/**"/>
				<include name="resources/**"/>
				<include name="templates/**"/>
				<include name="xsl/**"/>
				<exclude name="resources/sass"/>
			</fileset>
		</copy>
	</target>
	
	<target name="webapp-dist-img-fonts">
		<echo>Add icon.png</echo>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}" overwrite="yes" failonerror="no">
			<file file="${HenDi-WebApp.basedir}/hendi-secrets/wega-app/img/icon.png"/>
		</copy>
		
		<echo>Add image files to resources/img</echo>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/img/" overwrite="yes" failonerror="no">
			<fileset dir="${HenDi-WebApp.basedir}/hendi-secrets/wega-app/img/">
				<include name="*.png"/>
				<include name="*.jpg"/>
				<exclude name="icon.png"/>
			</fileset>
		</copy>
		
		<echo>Add favicons.</echo>
		<delete>
			<fileset dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/favicons">
				<include name="apple-touch-*.png"/>
				<include name="android-chrome*.png"/>
				<include name="mstile-*.png"/>
				<include name="safari-pinned-tab.svg"/>
			</fileset>
		</delete>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/favicons" overwrite="yes" failonerror="no">
			<fileset dir="${HenDi-WebApp.basedir}/hendi-secrets/wega-app/">
				<include name="favicon.ico"/>
				<include name="favicon*.png"/>
				<include name="apple-touch-icon-*.png"/>
				<include name="android-chrome-*.png"/>
				<include name="manifest.json"/>
			</fileset>
		</copy>
		
		<echo>Add fonts.</echo>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/fonts" failonerror="no">
			<fileset dir="${HenDi-WebApp.basedir}/hendi-secrets/wega-app/fonts" includes="**"/>
		</copy>
	</target>

	<target name="webapp-dist-odd-hendi">
		<echo>Overwrite the WeGA-ODD with HenDi-ODD data</echo>
		<!-- todo: improve behaviour, add compile ODD task? -->
		<delete dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/lib/WeGA-ODD"/>
		<mkdir dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/lib/WeGA-ODD"/>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/lib/WeGA-ODD" overwrite="yes">
			<fileset dir="${HenDi-WebApp.basedir}/submodules/HenDi-ODD">
				<!--<include name="**/*.*"/>-->
				<include name="compiled-ODD/*.xml"/>
				<include name="src/**/*.xml"/>
			</fileset>
		</copy>
	</target>
	
	<target name="webapp-dist-guidelines-hendi">
		<echo>Overwrite the WeGA Guidelines with the Henze-Digital Guidelines</echo>
		<delete dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/guidelines"/>
		<mkdir dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/guidelines"/>
		<copy todir="${WeGA-WebApp.basedir}/${wega.dist.dir}/guidelines" overwrite="yes">
			<fileset dir="${HenDi-WebApp.basedir}/submodules/HenDi-ODD/guidelines-html">
				<include name="*.html"/>
			</fileset>
		</copy>
	</target>

	<target name="webapp-dist">
		<antcall target="hendi-package-files"/>
		<antcall target="webapp-dist-libs"/>
		<antcall target="webapp-dist-data-wega"/>
		<antcall target="webapp-dist-data-hendi"/>
		<antcall target="webapp-dist-img-fonts"/>
		<antcall target="webapp-dist-odd-hendi"/>
		<antcall target="webapp-dist-guidelines-hendi"/>
	</target>
	
	<target name="build-webapp" depends="hendi:init">
		
		<echo>Make dist (build preparation)</echo>
		<antcall target="webapp-dist"/>
		
		<echo>Execute yarn, initalizes also WeGA-WebApp</echo>
		<antcall target="wega:yarn"/>
		
		<echo>Update SASS files with ${hendi.project.app} data</echo>
		<!--		<antcall target="hendi-sass-compilation"/>-->
		<antcall target="wega:sass"/>
		
		<echo>Compile openapi.json</echo>
		<antcall target="wega:swagger-cli"/>
	</target>
	
	<target name="minify" depends="build-webapp">
		<echo>Run minify on CSS files</echo>
		<apply executable="${WeGA-WebApp.basedir}/${dev_libs.dir}/minify/bin/minify.js" parallel="false">
			<fileset dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/css" includes="*.css" excludes="*min.css"/>
			<redirector>
				<outputmapper type="glob" from="*.css" to="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/css/*-min.css"/>
			</redirector>
		</apply>
		<echo>Run minify on JS files</echo>
		<apply executable="${WeGA-WebApp.basedir}/${dev_libs.dir}/minify/bin/minify.js" parallel="false">
			<fileset dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/js" includes="*.js" excludes="*min.js"/>
			<redirector>
				<outputmapper type="glob" from="*.js" to="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/js/*-min.js"/>
			</redirector>
		</apply>
		<echo>Run minify on datepicker.js</echo>
		<apply executable="${WeGA-WebApp.basedir}/${dev_libs.dir}/minify/bin/minify.js" parallel="false">
			<fileset dir="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/lib/jquery-ui/ui/widgets" includes="datepicker.js" excludes="*min.js"/>
			<redirector>
				<outputmapper type="glob" from="*.js" to="${WeGA-WebApp.basedir}/${wega.dist.dir}/resources/lib/jquery-ui/ui/widgets/*-min.js"/>
			</redirector>
		</apply>
	</target>
	
	<property name="project.xar.name" value="${hendi.project.app}-${hendi.project.version}"/>
	
	<target name="xar" depends="minify">
		<echo>Creating the xar Package (zipping).</echo>
		<zip destfile="${HenDi-WebApp.basedir}/${hendi.build.dir}/${project.xar.name}.xar">
			<fileset dir="${WeGA-WebApp.basedir}/${wega.dist.dir}">
				<exclude name="*.tmpl"/>
				<exclude name="resources/sass"/>
			</fileset>
		</zip>
<!--		<antcall target="wega:clean"/>-->
	</target>
	
	<target name="update-hendi-docker" depends="xar">
		<delete file="${HenDi-WebApp.basedir}/../hendi-docker/autodeploy/HenDi-WebApp-*.xar"/>
		<copy file="${HenDi-WebApp.basedir}/hendi-pkg-webapp/${project.xar.name}.xar" todir="${HenDi-WebApp.basedir}/../hendi-docker/autodeploy" overwrite="yes"/>
	</target>
	
</project>
	